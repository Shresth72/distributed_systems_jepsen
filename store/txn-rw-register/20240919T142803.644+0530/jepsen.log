2024-09-19 14:28:03,674{GMT}	INFO	[jepsen test runner] jepsen.core: Test version 4f305f814c5875377301d630478a20a0e50c1df8 (plus uncommitted changes)
2024-09-19 14:28:03,674{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w txn-rw-register --bin ./target/debug/txn --node-count 1 --time-limit 20 --rate 1000 --concurrency 2n --consistency-models read-uncommitted --availability total
2024-09-19 14:28:03,765{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count 1
 :availability :total
 :max-txn-length 4
 :concurrency 2
 :db
 #object[maelstrom.db$db$reify__16142
         "0x6d4bdb75"
         "maelstrom.db$db$reify__16142@6d4bdb75"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "txn-rw-register"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x5bd585a5" "2024-09-19T14:28:03.644+05:30"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15251
         "0x65c040c9"
         "maelstrom.net$jepsen_net$reify__15251@65c040c9"]
 :client
 #object[maelstrom.workload.txn_rw_register$client$reify__20030
         "0x11736ebc"
         "maelstrom.workload.txn_rw_register$client$reify__20030@11736ebc"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x4a03c4bc"
         "java.util.concurrent.CyclicBarrier@4a03c4bc"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 1000.0
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0x3d0c88f4"
         "jepsen.checker$compose$reify__11881@3d0c88f4"]
 :argv
 ("test"
  "-w"
  "txn-rw-register"
  "--bin"
  "./target/debug/txn"
  "--node-count"
  "1"
  "--time-limit"
  "20"
  "--rate"
  "1000"
  "--concurrency"
  "2n"
  "--consistency-models"
  "read-uncommitted"
  "--availability"
  "total")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16416@5aad4194"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16397@50a1c2f3"]})
 :nodes ["n0"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "./target/debug/txn"
 :generator
 (jepsen.generator.TimeLimit
  {:limit 20000000000,
   :cutoff nil,
   :gen (jepsen.generator.Any
         {:gens [(jepsen.generator.OnThreads
                  {:f #{:nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x5ed83e36"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@5ed83e36"],
                   :gen nil})
                 (jepsen.generator.OnThreads
                  {:f #jepsen.generator.context.AllBut{:element :nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x2459715c"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@2459715c"],
                   :gen (jepsen.generator.Stagger
                         {:dt 2000000,
                          :next-time nil,
                          :gen ({:type :invoke,
                                 :f :txn,
                                 :value [[:r 7 nil] [:r 9 nil] [:w 7 1]]}
                                {:type :invoke,
                                 :f :txn,
                                 :value [[:w 9 1] [:w 7 2] [:r 9 nil] [:w 7 3]]}
                                {:type :invoke,
                                 :f :txn,
                                 :value [[:w 9 2] [:w 9 3] [:r 8 nil]]}
                                {:type :invoke,
                                 :f :txn,
                                 :value [[:w 9 4]
                                         [:w 9 5]
                                         [:r 8 nil]
                                         [:r 9 nil]]}
                                {:type :invoke,
                                 :f :txn,
                                 :value [[:r 8 nil] [:w 9 6]]}
                                {:type :invoke,
                                 :f :txn,
                                 :value [[:r 7 nil] [:w 3 1] [:w 5 1] [:w 9 7]]}
                                {:type :invoke,
                                 :f :txn,
                                 :value [[:r 9 nil]
                                         [:r 8 nil]
                                         [:w 9 8]
                                         [:r 8 nil]]}
                                {:type :invoke,
                                 :f :txn,
                                 :value [[:r 9 nil]
                                         [:w 8 1]
                                         [:w 8 2]
                                         [:r 8 nil]]}
                                ...)})})]})})
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15254
         "0x54a04eae"
         "maelstrom.net$jepsen_os$reify__15254@54a04eae"]
 :time-limit 20
 :workload :txn-rw-register
 :consistency-models (:read-uncommitted)
 :topology :grid}

2024-09-19 14:28:06,097{GMT}	INFO	[jepsen node n0] maelstrom.net: Starting Maelstrom network
2024-09-19 14:28:06,100{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2024-09-19 14:28:06,102{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2024-09-19 14:28:06,107{GMT}	INFO	[jepsen node n0] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2024-09-19 14:28:06,111{GMT}	INFO	[jepsen node n0] maelstrom.db: Setting up n0
2024-09-19 14:28:06,113{GMT}	INFO	[jepsen node n0] maelstrom.process: launching ./target/debug/txn []
2024-09-19 14:28:06,143{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2024-09-19 14:28:06,167{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:txn	[[:w 9 1] [:w 7 2] [:r 9 nil] [:w 7 3]]
2024-09-19 14:28:06,167{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:txn	[[:r 7 nil] [:r 9 nil] [:w 7 1]]
2024-09-19 14:28:11,176{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:info	:txn	[[:w 9 1] [:w 7 2] [:r 9 nil] [:w 7 3]]	:net-timeout
2024-09-19 14:28:11,176{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:info	:txn	[[:r 7 nil] [:r 9 nil] [:w 7 1]]	:net-timeout
2024-09-19 14:28:11,178{GMT}	INFO	[jepsen worker 0] jepsen.util: 2	:invoke	:txn	[[:w 9 2] [:w 9 3] [:r 8 nil]]
2024-09-19 14:28:11,178{GMT}	INFO	[jepsen worker 1] jepsen.util: 3	:invoke	:txn	[[:w 9 4] [:w 9 5] [:r 8 nil] [:r 9 nil]]
2024-09-19 14:28:16,180{GMT}	INFO	[jepsen worker 0] jepsen.util: 2	:info	:txn	[[:w 9 2] [:w 9 3] [:r 8 nil]]	:net-timeout
2024-09-19 14:28:16,180{GMT}	INFO	[jepsen worker 1] jepsen.util: 3	:info	:txn	[[:w 9 4] [:w 9 5] [:r 8 nil] [:r 9 nil]]	:net-timeout
2024-09-19 14:28:16,181{GMT}	INFO	[jepsen worker 1] jepsen.util: 5	:invoke	:txn	[[:r 8 nil] [:w 9 6]]
2024-09-19 14:28:16,181{GMT}	INFO	[jepsen worker 0] jepsen.util: 4	:invoke	:txn	[[:r 7 nil] [:w 3 1] [:w 5 1] [:w 9 7]]
2024-09-19 14:28:21,182{GMT}	INFO	[jepsen worker 1] jepsen.util: 5	:info	:txn	[[:r 8 nil] [:w 9 6]]	:net-timeout
2024-09-19 14:28:21,183{GMT}	INFO	[jepsen worker 0] jepsen.util: 4	:info	:txn	[[:r 7 nil] [:w 3 1] [:w 5 1] [:w 9 7]]	:net-timeout
2024-09-19 14:28:21,184{GMT}	INFO	[jepsen worker 0] jepsen.util: 6	:invoke	:txn	[[:r 9 nil] [:r 8 nil] [:w 9 8] [:r 8 nil]]
2024-09-19 14:28:21,186{GMT}	INFO	[jepsen worker 1] jepsen.util: 7	:invoke	:txn	[[:r 9 nil] [:w 8 1] [:w 8 2] [:r 8 nil]]
2024-09-19 14:28:26,186{GMT}	INFO	[jepsen worker 0] jepsen.util: 6	:info	:txn	[[:r 9 nil] [:r 8 nil] [:w 9 8] [:r 8 nil]]	:net-timeout
2024-09-19 14:28:26,190{GMT}	INFO	[jepsen worker 1] jepsen.util: 7	:info	:txn	[[:r 9 nil] [:w 8 1] [:w 8 2] [:r 8 nil]]	:net-timeout
2024-09-19 14:28:26,237{GMT}	INFO	[jepsen test runner] jepsen.core: Run complete, writing
2024-09-19 14:28:26,358{GMT}	INFO	[jepsen node n0] maelstrom.db: Tearing down n0
2024-09-19 14:28:27,199{GMT}	INFO	[jepsen node n0] maelstrom.net: Shutting down Maelstrom network
2024-09-19 14:28:27,204{GMT}	WARN	[jepsen test runner] jepsen.core: Test crashed!
clojure.lang.ExceptionInfo: Node n0 crashed with exit status 1. Before crashing, it wrote to STDOUT:

{"src":"n0","dest":"c0","body":{"msg_id":0,"in_reply_to":1,"type":"init_ok"}}

And to STDERR:

Error: stdin thread err'd

Caused by:
    0: error deserializing input
    1: missing field `msg_id` at line 1 column 114

Full STDERR logs are available in /home/shrestha/rust/distributed_systems/store/txn-rw-register/20240919T142803.644+0530/node-logs/n0.log
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.process$stop_node_BANG_.invokeStatic(process.clj:239)
	at maelstrom.process$stop_node_BANG_.invoke(process.clj:217)
	at maelstrom.db$db$reify__16142.teardown_BANG_(db.clj:75)
	at jepsen.db$fn__8744$G__8725__8748.invoke(db.clj:12)
	at jepsen.db$fn__8744$G__8724__8753.invoke(db.clj:12)
	at clojure.core$partial$fn__5908.invoke(core.clj:2642)
	at jepsen.control$on_nodes$fn__8599.invoke(control.clj:314)
	at clojure.lang.AFn.applyToHelper(AFn.java:154)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invokeStatic(core.clj:671)
	at clojure.core$bound_fn_STAR_$fn__5818.doInvoke(core.clj:2020)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at dom_top.core$real_pmap_helper$build_thread__211$fn__212.invoke(core.clj:163)
	at clojure.lang.AFn.applyToHelper(AFn.java:152)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
	at clojure.lang.RestFn.invoke(RestFn.java:425)
	at clojure.lang.AFn.applyToHelper(AFn.java:156)
	at clojure.lang.RestFn.applyTo(RestFn.java:132)
	at clojure.core$apply.invokeStatic(core.clj:671)
	at clojure.core$bound_fn_STAR_$fn__5818.doInvoke(core.clj:2020)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at clojure.lang.AFn.run(AFn.java:22)
	at java.base/java.lang.Thread.run(Thread.java:840)
